# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(925, 593)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphicsView.sizePolicy().hasHeightForWidth())
        self.graphicsView.setSizePolicy(sizePolicy)
        self.graphicsView.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.graphicsView.setStyleSheet("background-color: rgb(57, 57, 57);")
        self.graphicsView.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.graphicsView.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.graphicsView.setRenderHints(QtGui.QPainter.Antialiasing|QtGui.QPainter.HighQualityAntialiasing|QtGui.QPainter.SmoothPixmapTransform|QtGui.QPainter.TextAntialiasing)
        self.graphicsView.setDragMode(QtWidgets.QGraphicsView.ScrollHandDrag)
        self.graphicsView.setTransformationAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.graphicsView.setResizeAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.graphicsView.setViewportUpdateMode(QtWidgets.QGraphicsView.FullViewportUpdate)
        self.graphicsView.setObjectName("graphicsView")
        self.horizontalLayout_2.addWidget(self.graphicsView)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setContentsMargins(0, -1, -1, -1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setMinimumSize(QtCore.QSize(0, 80))
        self.widget.setObjectName("widget")
        self.logo = QtWidgets.QLabel(self.widget)
        self.logo.setGeometry(QtCore.QRect(90, 10, 71, 61))
        self.logo.setStyleSheet("border-image: url(:/LogoImage/ViTool-CR.png);")
        self.logo.setText("")
        self.logo.setScaledContents(True)
        self.logo.setAlignment(QtCore.Qt.AlignCenter)
        self.logo.setObjectName("logo")
        self.verticalLayout.addWidget(self.widget)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.timer = QtWidgets.QLabel(self.centralwidget)
        self.timer.setMinimumSize(QtCore.QSize(0, 60))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.timer.setFont(font)
        self.timer.setAlignment(QtCore.Qt.AlignCenter)
        self.timer.setObjectName("timer")
        self.verticalLayout.addWidget(self.timer)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.run = QtWidgets.QPushButton(self.centralwidget)
        self.run.setEnabled(False)
        self.run.setObjectName("run")
        self.horizontalLayout.addWidget(self.run)
        self.pause = QtWidgets.QPushButton(self.centralwidget)
        self.pause.setEnabled(False)
        self.pause.setObjectName("pause")
        self.horizontalLayout.addWidget(self.pause)
        self.reload = QtWidgets.QPushButton(self.centralwidget)
        self.reload.setEnabled(False)
        self.reload.setObjectName("reload")
        self.horizontalLayout.addWidget(self.reload)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.log = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.log.setReadOnly(True)
        self.log.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.log.setObjectName("log")
        self.verticalLayout.addWidget(self.log)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 925, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuRPL_Tree = QtWidgets.QMenu(self.menuView)
        self.menuRPL_Tree.setEnabled(False)
        self.menuRPL_Tree.setObjectName("menuRPL_Tree")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuCooja = QtWidgets.QMenu(self.menubar)
        self.menuCooja.setObjectName("menuCooja")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.open = QtWidgets.QAction(MainWindow)
        self.open.setObjectName("open")
        self.save = QtWidgets.QAction(MainWindow)
        self.save.setEnabled(False)
        self.save.setObjectName("save")
        self.dodag = QtWidgets.QAction(MainWindow)
        self.dodag.setEnabled(False)
        self.dodag.setObjectName("dodag")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.editor = QtWidgets.QAction(MainWindow)
        self.editor.setEnabled(False)
        self.editor.setObjectName("editor")
        self.parameters = QtWidgets.QAction(MainWindow)
        self.parameters.setEnabled(False)
        self.parameters.setObjectName("parameters")
        self.guide = QtWidgets.QAction(MainWindow)
        self.guide.setObjectName("guide")
        self.about = QtWidgets.QAction(MainWindow)
        self.about.setObjectName("about")
        self.actionActivate = QtWidgets.QAction(MainWindow)
        self.actionActivate.setObjectName("actionActivate")
        self.actionDesactivate = QtWidgets.QAction(MainWindow)
        self.actionDesactivate.setObjectName("actionDesactivate")
        self.actionDesactivate_2 = QtWidgets.QAction(MainWindow)
        self.actionDesactivate_2.setObjectName("actionDesactivate_2")
        self.actionHide = QtWidgets.QAction(MainWindow)
        self.actionHide.setObjectName("actionHide")
        self.actionShow = QtWidgets.QAction(MainWindow)
        self.actionShow.setObjectName("actionShow")
        self.actionHide_2 = QtWidgets.QAction(MainWindow)
        self.actionHide_2.setObjectName("actionHide_2")
        self.actionShow_2 = QtWidgets.QAction(MainWindow)
        self.actionShow_2.setEnabled(True)
        self.actionShow_2.setObjectName("actionShow_2")
        self.actionHide_3 = QtWidgets.QAction(MainWindow)
        self.actionHide_3.setObjectName("actionHide_3")
        self.topology = QtWidgets.QAction(MainWindow)
        self.topology.setObjectName("topology")
        self.restart = QtWidgets.QAction(MainWindow)
        self.restart.setObjectName("restart")
        self.Energy_consumption = QtWidgets.QAction(MainWindow)
        self.Energy_consumption.setCheckable(True)
        self.Energy_consumption.setEnabled(False)
        self.Energy_consumption.setObjectName("Energy_consumption")
        self.Latency = QtWidgets.QAction(MainWindow)
        self.Latency.setCheckable(True)
        self.Latency.setEnabled(False)
        self.Latency.setObjectName("Latency")
        self.Control_messages = QtWidgets.QAction(MainWindow)
        self.Control_messages.setCheckable(True)
        self.Control_messages.setEnabled(False)
        self.Control_messages.setObjectName("Control_messages")
        self.new_project = QtWidgets.QAction(MainWindow)
        self.new_project.setObjectName("new_project")
        self.DODAG_build = QtWidgets.QAction(MainWindow)
        self.DODAG_build.setCheckable(True)
        self.DODAG_build.setEnabled(False)
        self.DODAG_build.setObjectName("DODAG_build")
        self.cooja = QtWidgets.QAction(MainWindow)
        self.cooja.setObjectName("cooja")
        self.menuFile.addAction(self.new_project)
        self.menuFile.addAction(self.open)
        self.menuFile.addAction(self.save)
        self.menuFile.addAction(self.dodag)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuEdit.addAction(self.editor)
        self.menuEdit.addAction(self.parameters)
        self.menuRPL_Tree.addAction(self.topology)
        self.menuRPL_Tree.addAction(self.restart)
        self.menuView.addAction(self.Energy_consumption)
        self.menuView.addAction(self.Latency)
        self.menuView.addAction(self.Control_messages)
        self.menuView.addAction(self.DODAG_build)
        self.menuView.addAction(self.menuRPL_Tree.menuAction())
        self.menuHelp.addAction(self.guide)
        self.menuHelp.addAction(self.about)
        self.menuCooja.addAction(self.cooja)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuCooja.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.actionClose.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Visualizer Tool based on Cooja Simulator"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; font-weight:600;\">ViTool - BC</span></p></body></html>"))
        self.timer.setText(_translate("MainWindow", "00:00.000"))
        self.run.setText(_translate("MainWindow", "Play"))
        self.pause.setText(_translate("MainWindow", "Pause"))
        self.reload.setText(_translate("MainWindow", "Reset"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuRPL_Tree.setTitle(_translate("MainWindow", "RPL Tree"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuCooja.setTitle(_translate("MainWindow", "Cooja"))
        self.open.setText(_translate("MainWindow", "Open project"))
        self.open.setShortcut(_translate("MainWindow", "Meta+O"))
        self.save.setText(_translate("MainWindow", "Save project"))
        self.save.setShortcut(_translate("MainWindow", "Meta+S"))
        self.dodag.setText(_translate("MainWindow", "Export Topology"))
        self.dodag.setShortcut(_translate("MainWindow", "Meta+D"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.editor.setText(_translate("MainWindow", "Node editor"))
        self.editor.setShortcut(_translate("MainWindow", "Meta+E"))
        self.parameters.setText(_translate("MainWindow", "Simulation parameters"))
        self.parameters.setShortcut(_translate("MainWindow", "Meta+P"))
        self.guide.setText(_translate("MainWindow", "See guide"))
        self.about.setText(_translate("MainWindow", "About us"))
        self.actionActivate.setText(_translate("MainWindow", "Activate"))
        self.actionDesactivate.setText(_translate("MainWindow", "Show"))
        self.actionDesactivate_2.setText(_translate("MainWindow", "Desactivate"))
        self.actionHide.setText(_translate("MainWindow", "Hide"))
        self.actionShow.setText(_translate("MainWindow", "Show"))
        self.actionHide_2.setText(_translate("MainWindow", "Hide"))
        self.actionShow_2.setText(_translate("MainWindow", "Show"))
        self.actionHide_3.setText(_translate("MainWindow", "Hide"))
        self.topology.setText(_translate("MainWindow", "See topology"))
        self.restart.setText(_translate("MainWindow", "Restart view"))
        self.Energy_consumption.setText(_translate("MainWindow", "Energy consumption"))
        self.Latency.setText(_translate("MainWindow", "Latency per node"))
        self.Control_messages.setText(_translate("MainWindow", "Control messages"))
        self.new_project.setText(_translate("MainWindow", "New project"))
        self.DODAG_build.setText(_translate("MainWindow", "Tree build"))
        self.cooja.setText(_translate("MainWindow", "Open tool"))
import images.logo_rc
import images.energy_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
